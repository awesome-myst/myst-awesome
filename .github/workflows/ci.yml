name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright (Linux)
        if: runner.os == 'Linux'
        run: |
          pnpm --filter=@awesome-myst/myst-awesome exec playwright install --with-deps
          pnpm --filter=@awesome-myst/myst-awesome-docs exec playwright install --with-deps

      - name: Install Playwright (macOS/Windows)
        if: runner.os != 'Linux'
        run: |
          pnpm --filter=@awesome-myst/myst-awesome exec playwright install
          pnpm --filter=@awesome-myst/myst-awesome-docs exec playwright install

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm test

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-${{ runner.os }}-node${{ matrix.node }}
          if-no-files-found: ignore
          retention-days: 14
          path: |
            playwright-report/**
            test-results/**
            packages/**/playwright-report/**
            packages/**/test-results/**
            docs/playwright-report/**
            docs/test-results/**
