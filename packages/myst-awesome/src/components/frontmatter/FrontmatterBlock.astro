---
/**
 * FrontmatterBlock component for MyST pages
 * Main component that orchestrates all frontmatter display
 * Props:
 * - frontmatter: The page frontmatter data from page.data.frontmatter
 * - baseUrl: Optional base URL for scienceicons (e.g., '/book' for subdirectory deployments)
 */
import type { ProjectAndPageFrontmatter } from '@awesome-myst/myst-zod';
import Authors from './Authors.astro';
import Affiliations from './Affiliations.astro';
import LicenseBadges from './LicenseBadges.astro';
import DownloadsDropdown from './DownloadsDropdown.astro';
import LaunchButton from './LaunchButton.astro';

interface Props {
  frontmatter: ProjectAndPageFrontmatter;
  baseUrl?: string;
  components?: {
    authors?: any;
    affiliations?: any;
    licenseBadges?: any;
    downloads?: any;
    launchButton?: any;
  };
}

const { frontmatter, baseUrl, components } = Astro.props;

// Get component overrides or use defaults
const AuthorsComponent = components?.authors || Authors;
const AffiliationsComponent = components?.affiliations || Affiliations;
const LicenseBadgesComponent = components?.licenseBadges || LicenseBadges;
const DownloadsComponent = components?.downloads || DownloadsDropdown;
const LaunchButtonComponent = components?.launchButton || LaunchButton;

// DOI helper function
function formatDoi(doi: string) {
  return doi.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//, '');
}
console.log('frontmatter', frontmatter)
---

{frontmatter && (
  <div style="padding: var(--wa-space-xs);" data-frontmatter-baseurl={baseUrl}>
    <!-- DOI -->
    {frontmatter.doi && (
      <div>
        <a 
          href={`https://doi.org/${formatDoi(frontmatter.doi)}`} 
          target="_blank" 
          rel="noopener noreferrer"
          style="color: var(--wa-color-primary-600); font-size: var(--wa-font-size-small); text-decoration: none;"
          onmouseover="this.style.color='var(--wa-color-primary-800)'"
          onmouseout="this.style.color='var(--wa-color-primary-600)'"
        >
          DOI: {formatDoi(frontmatter.doi)}
        </a>
      </div>
    )}
    
    <!-- Authors -->
    {frontmatter.authors && (
      <AuthorsComponent authors={frontmatter.authors} affiliations={frontmatter.affiliations} />
    )}
    
    <!-- Affiliations (if not shown with authors) -->
    {frontmatter.affiliations && !frontmatter.authors && (
      <AffiliationsComponent affiliations={frontmatter.affiliations} />
    )}
    
    <!-- License Badges -->
    {frontmatter.license && (
      <LicenseBadgesComponent iconOnly={true} license={frontmatter.license} />
    )}
    
    <!-- Downloads -->
    {frontmatter.downloads && (
      <DownloadsComponent downloads={frontmatter.downloads} />
    )}
    
    <!-- Launch Button (for Jupyter/Binder) -->
    {frontmatter.thebe && (
      <LaunchButtonComponent thebe={frontmatter.thebe} />
    )}
  </div>
)}

<script>
  // Import Web Awesome components
  import '@awesome.me/webawesome/dist/components/badge/badge.js';
  import '@awesome.me/webawesome/dist/components/button/button.js';
  import '@awesome.me/webawesome/dist/components/icon/icon.js';
  
  // Import and register scienceicons
  import { registerScienceIconsLibrary } from '../../lib/wa-scienceicons.ts';
  
  // Register scienceicons library if running in browser
  if (typeof window !== 'undefined') {
    // Get baseUrl from the component props (passed via data attribute)
    const frontmatterElement = document.querySelector('[data-frontmatter-baseurl]');
    const baseUrl = frontmatterElement?.getAttribute('data-frontmatter-baseurl') || undefined;
    registerScienceIconsLibrary(baseUrl);
  }
</script>
