---
import { getCollection, getEntry } from 'astro:content';

// Get all collections
const mystXrefData = await getCollection('mystXref');
const pagesData = await getCollection('pages');
const projectData = await getCollection('projectFrontmatter');

// Get the actual xref and project entries
const xrefEntry = mystXrefData[0];
const projectEntry = projectData[0];

const title = projectEntry?.data.project?.title || 'MyST Awesome Theme Collections';
const description = projectEntry?.data.project?.description || 'Explore MyST content collections';
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
  </head>
  <body>
    <header>
      <h1>{title}</h1>
      <p>{description}</p>
    </header>

    <main>
      <section class="collections-overview">
        <h2>Content Collections Overview</h2>
        
        <div class="collection-grid">
          <div class="collection-card">
            <h3>MyST XRef Collection</h3>
            <p>Cross-reference data from MyST content server</p>
            <ul>
              <li><strong>Entries:</strong> {mystXrefData.length}</li>
              {xrefEntry && (
                <>
                  <li><strong>Version:</strong> {xrefEntry.data.version}</li>
                  <li><strong>MyST Version:</strong> {xrefEntry.data.myst}</li>
                  <li><strong>References:</strong> {xrefEntry.data.references.length}</li>
                </>
              )}
            </ul>
            <a href="#mystxref-details" class="button">View Details</a>
          </div>

          <div class="collection-card">
            <h3>Pages Collection</h3>
            <p>Individual page references extracted from XRef data</p>
            <ul>
              <li><strong>Entries:</strong> {pagesData.length}</li>
              <li><strong>Pages:</strong> {pagesData.filter(p => p.data.kind === 'page').length}</li>
            </ul>
            <a href="#pages-details" class="button">View Details</a>
          </div>

          <div class="collection-card">
            <h3>Project Frontmatter</h3>
            <p>Project configuration from myst.yml</p>
            <ul>
              <li><strong>Entries:</strong> {projectData.length}</li>
              {projectEntry && (
                <>
                  <li><strong>Version:</strong> {projectEntry.data.version}</li>
                  <li><strong>Project ID:</strong> {projectEntry.data.project?.id}</li>
                </>
              )}
            </ul>
            <a href="#project-details" class="button">View Details</a>
          </div>
        </div>
      </section>

      <section id="pages-details" class="details-section">
        <h2>Pages Collection Details</h2>
        <div class="pages-list">
          {pagesData.map((page) => (
            <div class="page-item">
              <h4>
                <a href={`/${page.id === '/' ? 'index' : page.id.slice(1)}`}>
                  {page.data.url} ({page.data.kind})
                </a>
              </h4>
              <p><strong>Data URL:</strong> {page.data.data}</p>
              {page.data.identifier && <p><strong>Identifier:</strong> {page.data.identifier}</p>}
              {page.data.implicit && <p><em>Implicit reference</em></p>}
            </div>
          ))}
        </div>
      </section>

      <section id="mystxref-details" class="details-section">
        <h2>MyST XRef Collection Details</h2>
        {xrefEntry && (
          <div class="xref-content">
            <h3>Cross-Reference Summary</h3>
            <div class="reference-types">
              {Object.entries(
                xrefEntry.data.references.reduce((acc: {[key: string]: number}, ref: any) => {
                  acc[ref.kind] = (acc[ref.kind] || 0) + 1;
                  return acc;
                }, {})
              ).map(([kind, count]) => (
                <div class="reference-type">
                  <strong>{kind}:</strong> {count}
                </div>
              ))}
            </div>
            
            <h3>Recent References</h3>
            <div class="references-list">
              {xrefEntry.data.references.slice(0, 10).map((ref) => (
                <div class="reference-item">
                  <strong>{ref.kind}:</strong> 
                  <a href={ref.url}>{ref.url}</a>
                  {ref.identifier && <span class="identifier">#{ref.identifier}</span>}
                  <br />
                  <small>Data: {ref.data}</small>
                </div>
              ))}
            </div>
          </div>
        )}
      </section>

      <section id="project-details" class="details-section">
        <h2>Project Frontmatter Details</h2>
        {projectEntry && (
          <div class="project-content">
            <pre>{JSON.stringify(projectEntry.data, null, 2)}</pre>
          </div>
        )}
      </section>
    </main>

    <footer>
      <p>
        This demonstrates Astro Content Collections integration with MyST.
        <a href="https://github.com/awesome-myst/myst-awesome-theme">View on GitHub</a>
      </p>
    </footer>
  </body>
</html>

<style>
  * {
    box-sizing: border-box;
  }

  body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #333;
  }

  header {
    background: rgba(255, 255, 255, 0.95);
    padding: 2rem;
    text-align: center;
    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
  }

  header h1 {
    margin: 0 0 0.5rem 0;
    color: #2c3e50;
    font-size: 2.5rem;
    font-weight: 700;
  }

  header p {
    margin: 0;
    color: #7f8c8d;
    font-size: 1.2rem;
  }

  main {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 2rem;
  }

  .collections-overview {
    background: white;
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
  }

  .collections-overview h2 {
    color: #2c3e50;
    margin-bottom: 1.5rem;
    font-size: 1.8rem;
  }

  .collection-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .collection-card {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 0.5rem;
    border: 1px solid #e9ecef;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .collection-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .collection-card h3 {
    color: #495057;
    margin-top: 0;
    font-size: 1.3rem;
  }

  .collection-card ul {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
  }

  .collection-card li {
    padding: 0.25rem 0;
    border-bottom: 1px solid #dee2e6;
  }

  .collection-card li:last-child {
    border-bottom: none;
  }

  .button {
    display: inline-block;
    background: #007bff;
    color: white;
    padding: 0.5rem 1rem;
    text-decoration: none;
    border-radius: 0.25rem;
    transition: background 0.2s;
    font-weight: 500;
  }

  .button:hover {
    background: #0056b3;
  }

  .details-section {
    background: white;
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
  }

  .details-section h2 {
    color: #2c3e50;
    margin-bottom: 1.5rem;
    font-size: 1.8rem;
    border-bottom: 3px solid #007bff;
    padding-bottom: 0.5rem;
  }

  .pages-list {
    display: grid;
    gap: 1rem;
  }

  .page-item {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 0.5rem;
    border-left: 4px solid #007bff;
  }

  .page-item h4 {
    margin: 0 0 0.5rem 0;
  }

  .page-item h4 a {
    color: #007bff;
    text-decoration: none;
  }

  .page-item h4 a:hover {
    text-decoration: underline;
  }

  .page-item p {
    margin: 0.25rem 0;
    font-size: 0.9rem;
    color: #6c757d;
  }

  .reference-types {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .reference-type {
    background: #e3f2fd;
    padding: 0.75rem;
    border-radius: 0.25rem;
    text-align: center;
    font-weight: 500;
  }

  .references-list {
    display: grid;
    gap: 1rem;
  }

  .reference-item {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 0.5rem;
    border-left: 4px solid #28a745;
  }

  .identifier {
    background: #6c757d;
    color: white;
    padding: 0.1rem 0.4rem;
    border-radius: 0.2rem;
    font-size: 0.8rem;
    margin-left: 0.5rem;
  }

  .project-content pre {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    font-size: 0.9rem;
    line-height: 1.4;
    border: 1px solid #e9ecef;
  }

  footer {
    text-align: center;
    padding: 2rem;
    color: white;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 1rem;
    margin-top: 2rem;
  }

  footer a {
    color: #ffd700;
    text-decoration: none;
  }

  footer a:hover {
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    header h1 {
      font-size: 2rem;
    }
    
    header p {
      font-size: 1rem;
    }
    
    main {
      padding: 0 1rem;
    }
    
    .collection-grid {
      grid-template-columns: 1fr;
    }
    
    .reference-types {
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    }
  }
</style>
